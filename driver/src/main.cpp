/* Main.ino file generated by New Project wizard
 *
 * Created:   mar. ago. 6 2024
 * Processor: Arduino Nano
 * Compiler:  Arduino AVR (Proteus)
 */

// Peripheral Configuration Code (do not edit)
//---CONFIG_BEGIN---
#pragma GCC push_options
#pragma GCC optimize ("Os")

#include <Core.h> // Required by cpu
#include <cpu.h>

#pragma GCC pop_options

// Peripheral Constructors
CPU &cpu = Cpu;

void peripheral_setup () {
}

void peripheral_loop() {
}
//---CONFIG_END---

#pragma GCC push_optionss
#pragma GCC optimize ("O1")


#include "stepper_driver.h"
#include "encoder.h"
#include <wire.h>
#include <LiquidCrystal_I2C.h>
#include <params.h>
#include <menu.h>

//el stepper
Stepper_driver mi_stepper;

//el encoder
Encoder mi_encoder;

//esto es para el lcd, la lib de menu desp lo maneja solita
LiquidCrystal_I2C lcd(0x38, 16, 2);// Address 0x38 for 16x2 LCD

void setear_pasos();

void correr();


//estructura del menu
const MenuItem menuItems[] = {
    {"Pasos", setear_pasos},
    {"Correr", correr},
};

const size_t numMenuItems = sizeof(menuItems) / sizeof(menuItems[0]);//el tamanio del menu?

Menu menu(menuItems, numMenuItems, lcd);//el objeto menu

void setup () {
peripheral_setup();

// TODO: put your setup code here, to run once:
  mi_stepper.initialize_stepper(5,2,6,4,3,14,15,16);
  mi_encoder.initialize_encoder(7,8,11,0);
  
  lcd.init();       // Initialize the LCD
  lcd.backlight();  // Turn on the LCD backlight
  menu.display_Menu("Bienvenido");
}



int a;
unsigned int pasos = 1;


void loop() {
peripheral_loop();
// TODO: put your main code here, to run repeatedly:

   a = mi_encoder.get_encoder_direction();
   if(a!=0){
      if(a==-1){menu.next_Item();}else{menu.previous_Item();}//recorremos el menu
 }
 
 if(mi_encoder.get_button_state()==false){
 while(mi_encoder.get_button_state()==false);
   menu.select_Current_Item();//entramos al menu
 }
}



//acciones del menu
void setear_pasos(){
    lcd.clear();
    lcd.setCursor(0, 0);
    lcd.print("Ingrese # pasos:");
    while(true){   
       a = mi_encoder.get_encoder_direction();
	if(a!=0){
	    pasos = pasos + a;//no leo de vuelta
	    if(pasos<=0){pasos=1;}//para que no desborde para el otro lado
	    lcd.setCursor(0,1);
	    lcd.print(pasos);
	 }
	 if(mi_encoder.get_button_state()==false){ while(mi_encoder.get_button_state()==false);break;}//salimos
    }
    
    
    menu.display_Current_Item();//para que vuelva bien
}

void correr(){
    menu.display_Menu("Correr pasos");
    mi_stepper.move_steps(avanza,pasos);
   menu.display_Current_Item();//para que vuelva bien
}




#pragma GCC pop_options
